const { Pool } = require('pg');

let con_bd1, con_bd2;
function pool1(data){
    con_bd1 = new Pool ({
        host: `${data.host1}`, //'db.bvaqcsjdajjffqekutvg.supabase.co',
        database: `${data.db1}`, //'clinica',
        user: `${data.user1}`, //'postgres',
        password: `${data.pass1}`, //'JPsiqKsGTcvmW4w',
        max: 10,
        idleTimeoutMillis: 30000,
        connectionTimeoutMillis: 2000,
    });
    con_bd1.connect();
}

function pool2(data){
    con_bd2 = new Pool ({
        host: `${data.host2}`, //'db.bvaqcsjdajjffqekutvg.supabase.co',
        database: `${data.db2}`, //'consultorio',
        user: `${data.user2}`, //'postgres',
        password: `${data.pass2}`, //'JPsiqKsGTcvmW4w',
        max: 10,
        idleTimeoutMillis: 30000,
        connectionTimeoutMillis: 2000,
    });
    con_bd2.connect();
}


let getTable1 = (async(req, res) => {
    pool1(req.body)
    const { rows } = await con_bd1.query(`SELECT tablename AS tabela FROM pg_catalog.pg_tables
        WHERE schemaname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')
        ORDER BY tablename`);
    //await con_bd1.end();
    
    /*pool1
    .query(`SELECT tablename AS tabela FROM pg_catalog.pg_tables
            WHERE schemaname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')
            ORDER BY tablename`)
    .then((res) => console.log(res.rows))
    .catch((err) => console.error('Error executing query', err.stack))
    */
    return res.status(200).send(rows);
});

let getTable2 = (async(req, res) => {
    pool2(req.body)

    //con_bd2.connect();
    const { rows } = await con_bd2.query(`SELECT tablename AS tabela FROM pg_catalog.pg_tables
        WHERE schemaname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')
        ORDER BY tablename`);
    //await con_bd2.end();
    return res.status(200).send(rows);
});
    
module.exports = {
    con_bd1,
    con_bd2,
    getTable1,
    getTable2,
    pool1,
    pool2
};
